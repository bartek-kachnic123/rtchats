import org.gradle.internal.os.OperatingSystem

plugins {
    id 'com.kachnic.format-misc-conventions'
    id 'org.sonarqube'
}

tasks.named('sonar') {
    dependsOn subprojects.collect { [it.tasks.withType(Test), it.tasks.withType(JacocoReport)] }
    dependsOn 'npmCleanInstall', 'npmCoverage'
}

sonar {
    properties {
        def reportFile = file('build/reports/jacoco/test/jacocoTestReport.xml')
        property 'sonar.coverage.jacoco.xmlReportPaths', reportFile.exists() ? reportFile.absolutePath : ''

        def lcovReport = file('frontend/app/coverage/lcov.info')
        property 'sonar.javascript.lcov.reportPaths', lcovReport.exists() ? lcovReport.absolutePath : ''

        def sourceDirs = ['src/main/java']
        def testDirs = ['src/test/java']

        def frontendDir = file('frontend')
        if (frontendDir.exists() && frontendDir.isDirectory()) {
            frontendDir.eachDir { dir ->
                def srcDir = new File(dir, 'src')
                def testDir = new File(dir, 'tests')

                if (srcDir.exists()) {
                    sourceDirs << srcDir.path
                }

                if (testDir.exists()) {
                    testDirs << testDir.path
                }
            }
        }

        property 'sonar.sources', sourceDirs.join(',')
        property 'sonar.tests', testDirs.join(',')
    }
}

def currentOs = OperatingSystem.current()
def npmCommand = currentOs.isWindows() ? 'npm.cmd' : 'npm'

tasks.register('npmCleanInstall', Exec) {
    executable = npmCommand
    args = ['ci', '-ws', '--include-workspace-root']
}

tasks.register('npmCoverage', Exec) {
    executable = npmCommand
    args = ['run', 'coverage', '-ws', '--if-present']
    dependsOn 'npmCleanInstall'
}
