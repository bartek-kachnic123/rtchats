def depsProviders = [libs.commons.lang3, libs.commons.compress, libs.commons.codec]

def secureDeps = createSecureDeps(depsProviders)
def reason = "Force secure version due to CVE"

configurations.configureEach {
	resolutionStrategy.eachDependency {
		def key = createKey(requested.group, requested.name)

		if (secureDeps.containsKey(key)) {
			useVersion(secureDeps[key])
			because(reason)
		}
	}
}

private static createKey(String group, String name) {
	return group + ":" + name
}

private static createSecureDeps(List<Provider<MinimalExternalModuleDependency>> providers) {
	providers.collectEntries { provider ->
		[(createKey(provider.get().group, provider.get().name)) : provider.get().version]
	} as Map<String, String>
}
